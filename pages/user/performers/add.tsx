import type { NextPage } from 'next'
import type { Performer } from '@/lib/types'
import Head from 'next/head'
import { useForm, Controller } from 'react-hook-form'
import { withAuth } from '@m3o/nextjs'
import { useRouter } from 'next/router'
import { UserLayout } from '@/components/UserLayout'
import { TextInput } from '@/components/TextInput'
import { post } from '@/lib/fetch'

type Fields = Pick<Performer, 'name' | 'tagLine'>

export const getServerSideProps = withAuth(async (context) => {
  if (!context.req.user) {
    return {
      redirect: {
        permanent: false,
        destination: '/',
      },
    }
  }

  return {
    props: {
      user: context.req.user,
    },
  }
})

const AddPerformer: NextPage = () => {
  const router = useRouter()
  const { control, handleSubmit } = useForm<Fields>()

  async function onSubmit(values: Fields) {
    try {
      await post('/api/performers/create', values)
      router.push('/user')
    } catch (e) {
      console.log(e)
    }
  }

  return (
    <UserLayout>
      <Head>
        <title>Add new performer | The Act Booker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Create Performer</h1>
      <form onSubmit={handleSubmit(onSubmit)}>
        <Controller
          control={control}
          defaultValue=""
          name="name"
          render={({ field }) => (
            <TextInput {...field} label="Name" id="name" />
          )}
        />
        <Controller
          control={control}
          defaultValue=""
          name="tagLine"
          render={({ field }) => (
            <TextInput {...field} label="Tag Line" id="tagLine" />
          )}
        />
        <button type="submit">Submit</button>
      </form>
    </UserLayout>
  )
}

export default AddPerformer
